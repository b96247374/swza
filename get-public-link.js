import { spawn } from 'child_process';
import ngrok from 'ngrok';

console.log('๐ ุชุดุบูู ุงููููุน ูููุตูู ุงูุนุงู...');
console.log('ุงูุชุธุฑ ููููุงู ููุญุตูู ุนูู ุงูุฑุงุจุท...');
console.log('');

// ุชุดุบูู ุฎุงุฏู Vite
const server = spawn('npm', ['run', 'dev'], {
  stdio: 'pipe',
  shell: true
});

let serverReady = false;

server.stdout.on('data', (data) => {
  const output = data.toString();
  
  // ุงูุชุญูู ูู ุฌุงูุฒูุฉ ุงูุฎุงุฏู
  if (output.includes('Local:') && !serverReady) {
    serverReady = true;
    startNgrok();
  }
});

server.stderr.on('data', (data) => {
  console.error(`ุฎุทุฃ: ${data}`);
});

async function startNgrok() {
  try {
    console.log('๐ ุฅูุดุงุก ุงูุฑุงุจุท ุงูุนุงู...');
    
    const url = await ngrok.connect({
      port: 5173,
      region: 'us'
    });

    console.log('');
    console.log('๐ ุงููููุน ุฌุงูุฒ!');
    console.log('='.repeat(60));
    console.log('');
    console.log(`๐ ุงูุฑุงุจุท ุงูุนุงู: ${url}`);
    console.log('');
    console.log('๐ฑ ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฑุงุจุท ูู:');
    console.log('โข ุฃู ุฌูุงู ูู ุงูุนุงูู');
    console.log('โข ุฃู ููุจููุชุฑ ูู ุงูุนุงูู'); 
    console.log('โข ุฃู ููุงู ูุชุตู ุจุงูุฅูุชุฑูุช');
    console.log('');
    console.log('๐ ุงูุฑุงุจุท ุขูู ููุดูุฑ (HTTPS)');
    console.log('');
    console.log('โก ููุฅููุงู: ุงุถุบุท Ctrl+C');
    console.log('');

    // ูุณุฎ ุงูุฑุงุจุท ููุญุงูุธุฉ
    try {
      const { spawn } = require('child_process');
      const proc = spawn('clip', [], { stdio: 'pipe' });
      proc.stdin.write(url);
      proc.stdin.end();
      console.log('๐ ุชู ูุณุฎ ุงูุฑุงุจุท ููุญุงูุธุฉ!');
    } catch (error) {
      console.log('');
    }

    // ุญูุธ ุงูุฑุงุจุท ูู ููู
    const fs = await import('fs');
    const linkInfo = `ุฑุงุจุท ุงููููุน ุงูุนุงู: ${url}\nุชู ุงูุฅูุดุงุก: ${new Date().toLocaleString('ar-SA')}\n`;
    fs.writeFileSync('public-link.txt', linkInfo, 'utf8');
    console.log('๐พ ุชู ุญูุธ ุงูุฑุงุจุท ูู ููู: public-link.txt');
    console.log('');

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุฑุงุจุท ุงูุนุงู:', error.message);
    
    if (error.message.includes('authtoken')) {
      console.log('');
      console.log('๐ ุชุญุชุงุฌ ูุฅุนุฏุงุฏ ngrok:');
      console.log('1. ุงุฐูุจ ุฅูู: https://ngrok.com/');
      console.log('2. ุฃูุดุฆ ุญุณุงุจ ูุฌุงูู');
      console.log('3. ุงูุณุฎ ุงูู authtoken');
      console.log('4. ุดุบู: ngrok authtoken YOUR_TOKEN');
    }
  }
}

// ุงูุชุนุงูู ูุน ุฅููุงู ุงูุจุฑูุงูุฌ
process.on('SIGINT', async () => {
  console.log('');
  console.log('๐ ุฅููุงู ุงูุฎูุงุฏู...');
  
  try {
    await ngrok.kill();
  } catch (error) {
    // ุชุฌุงูู ุงูุฃุฎุทุงุก
  }
  
  server.kill('SIGTERM');
  process.exit(0);
});